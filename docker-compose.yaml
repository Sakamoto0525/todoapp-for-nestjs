version: '3.8'

services:
  # --------------------------------------------------
  # for development
  # --------------------------------------------------

  backend:
    build:
      dockerfile: .docker/backend/Dockerfile
      context: ./
    # command: npm run start:dev
    command: npm run start:debug
    volumes:
      - ./:/app:delegated
      - todoapp-backend-nodemodules-volume:/app/node_modules/
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3000:3000 # for nestjs
      - 9229:9229 # for debug

  db:
    image: mysql:8.0.32
    platform: linux/x86_64
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    command: --sql-mode=NO_ENGINE_SUBSTITUTION
    ports:
      - 3306:3306
    volumes:
      - ./.docker/db/initdb.d:/docker-entrypoint-initdb.d
      - ./.docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - todoapp-db-volume:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      retries: 10
      timeout: 100s

  # --------------------------------------------------
  # commands
  # --------------------------------------------------

  schemaspy:
    image: schemaspy/schemaspy:6.2.4
    platform: linux/x86_64
    user: root
    volumes:
      - ./.docker/schemaspy/schemaspy.properties:/schemaspy.properties # SchemaSpy Properties File
      - ./doc/definition/db:/output # SchemaSpy Output dir
    depends_on:
      - db
    environment:
      SCHEMASPY_OUTPUT: /output
    profiles:
      - schemaspy

  # dd-agent:
  #   image: datadog/agent:latest
  #   ports:
  #     - 8126:8126
  #   environment:
  #     DD_API_KEY: ${DD_API_KEY}
  #     DD_TAGS: "env:local, service:todoapp-backend"
  #     DD_APM_ENABLED: "true"
  #     DD_LOGS_ENABLED: "true"
  #     DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: "true"
  #     DD_AC_EXCLUDE: "name:datadog-agent"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - /proc/:/host/proc/:ro
  #     - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro

volumes:
  todoapp-db-volume:
  todoapp-backend-nodemodules-volume:
